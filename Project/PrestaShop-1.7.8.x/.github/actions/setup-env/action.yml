name: Setup PrestaShop Environment
description: Setup a docker Environment for PrestaShop

inputs:
    # PrestaShop Config inputs
    PHP_VERSION:
        required: true
        description: PHP Version For PrestaShop
    NODE_VERSION:
        required: false
        description: Node Version to Build Themes
        default: 14.21.3
    ENABLE_SSL:
        required: false
        description: True to Run with SSL
        default: 'true'
    INSTALL_AUTO:
        required: false
        description: True To Auto Install
        default: 'true'
    CP_API_CONFIG:    # Workaround until https://github.com/PrestaShop/PrestaShop/issues/29813 is fixed
        required: false
        description: True To Copy API Config
        default: 'false'
    DEV_MODE:
        required: false
        description: True to enable Developer mode
        default: 'false'

runs:
    using: 'composite'
    steps:
        # Docker to create the shop
        - name: Build and Run shop with docker
          shell: bash
          env:
              PS_ENABLE_SSL: '0'
              PS_INSTALL_AUTO: ${{ (inputs.INSTALL_AUTO == 'true') && '1' || '0' }}
              VERSION: ${{ inputs.PHP_VERSION }}
              NODE_VERSION: ${{ inputs.NODE_VERSION }}
              URL_FO: 'http://localhost:8001/'
              URL_PING: ${{ (inputs.INSTALL_AUTO == 'true') && 'en/' || 'install-dev/' }}
              PS_DOMAIN: 'localhost:8001'
              PS_DEV_MODE: ${{ (inputs.DEV_MODE == 'false') && '0' || '1' }}
              DB_SERVER: 'mysql'
              DB_NAME: 'prestashop'
              DB_PREFIX: 'tst_'
              DB_USER: 'root'
              DB_PASSWD: 'prestashop'
              PS_LANGUAGE: 'en'
              ADMIN_PASSWD: 'prestashop_demo'
          run: |
              USER_ID=$(id -u) GROUP_ID=$(id -g) \
              docker-compose -f docker-compose.yml up -d --build
              bash -c 'while [[ "$(curl -L -s -o /dev/null -w %{http_code} ${{ env.URL_FO }}${{ env.URL_PING }})" != "200" ]]; do sleep 5; done'
